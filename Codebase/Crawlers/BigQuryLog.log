The number of days for which the data needs to be pulled 0
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-21 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151021] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-21 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-22 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151022] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-22 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-23 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151023] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-23 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-24 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151024] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-24 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-25 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151025] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-25 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-26 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151026] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-26 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-27 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151027] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-27 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-28 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151028] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-28 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-29 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151029] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-29 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-30 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151030] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-30 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-01 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-10-31 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151031] where TIMESTAMP(created_at) >= TIMESTAMP("2015-10-31 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-01 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151101] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-01 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-01 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151101] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-01 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-01 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151101] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-01 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-01 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151101] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-01 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-02 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 0
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-03 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151103] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-03 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-04 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151104] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-04 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-05 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151105] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-05 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-07 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-06 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151106] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-06 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-07 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151107] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-07 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-07 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151107] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-07 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-07 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151107] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-07 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-07 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151107] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-07 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-08 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151108] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-08 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-08 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151108] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-08 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-08 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151108] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-08 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-08 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151108] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-08 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-09 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151109] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-09 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-10 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151110] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-10 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-11 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151111] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-11 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-12 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151112] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-12 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-14 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-13 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151113] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-13 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-14 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151114] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-14 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-14 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151114] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-14 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-14 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151114] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-14 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-14 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151114] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-14 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-15 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151115] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-15 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-15 06:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 2
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151115] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-15 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-15 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151115] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-15 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-15 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151115] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-15 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-15 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151115] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-15 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-16 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151116] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-16 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-17 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151117] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-17 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 00:00:00");'}
Data Pull from Bigquery completed
Data files sync to hadoop completed !!
/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-18 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151118] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-18 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-19 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151119] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-19 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-21 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-21 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-20 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151120] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-20 18:00:00")                                AND TIMESTAMP(created/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
_at) < TIMESTAMP("2015-11-21 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151121] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-21 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-21 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151121] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-21 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-21 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151121] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-21 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-21 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151121] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-21 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-22 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151122] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-22 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-22 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151122] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-22 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-22 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151122] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-22 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-22 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151122] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-22 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
/mnt/datavol/GithubAnalysis/Techtrends/Codebase/Crawlers/BigQuery_GithubTimeline.py:244: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
  df = df.sort('repo_created_at')
The number of days for which the data needs to be pulled 1
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-24 00:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 00:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 06:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 06:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 12:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 12:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-23 18:00:00");'}
{'query': 'select type,payload,repo.name,actor.login,FORMAT_UTC_USEC(created_at) as created,org.id,org.login                                from [githubarchive:day.events_20151123] where TIMESTAMP(created_at) >= TIMESTAMP("2015-11-23 18:00:00")                                AND TIMESTAMP(created_at) < TIMESTAMP("2015-11-24 00:00:00");'}
Data Pull from Bigquery completed
Duplicates removed
Data files sync to hadoop completed !!
